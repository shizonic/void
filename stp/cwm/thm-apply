#!/usr/bin/env sh

#. thm-export

apply_base() {
  test -f "${1}" || return 1
  for bn in base00 base01 base02 base03 base04 base05 base06 base07 base08 base09 base0A base0B base0C base0D base0E base0F; do
    val=$(env | grep "${bn}" | cut -d '=' -f 2)
  done
}

apply_gtk() {
  printf '[%s] Applying to gtk' "$(date +'%X')"
  cat ~/.themes/auto/gtk-2.0/gtkrc.tpl | envsubst > ~/.themes/auto/gtk-2.0/gtkrc
  cat ~/.themes/auto/gtk-3.0/gtk.tpl.css | envsubst > ~/.themes/auto/gtk-3.0/gtk.css
  printf ' ... finished!\n'
}

apply_shell() {
  put_template() { printf '\033]4;%d;rgb:%s\033\\' $@; }
  put_template_var() { printf '\033]%d;rgb:%s\033\\' $@; }
  put_template_custom() { printf '\033]%s%s\033\\' $@; }

  color00=$(printf '%s' "${base00}" | tr -d '#' | sed 's/.\{2\}/&\//g')
  color01=$(printf '%s' "${base01}" | tr -d '#' | sed 's/.\{2\}/&\//g')
  color02=$(printf '%s' "${base02}" | tr -d '#' | sed 's/.\{2\}/&\//g')
  color03=$(printf '%s' "${base03}" | tr -d '#' | sed 's/.\{2\}/&\//g')
  color04=$(printf '%s' "${base04}" | tr -d '#' | sed 's/.\{2\}/&\//g')
  color05=$(printf '%s' "${base05}" | tr -d '#' | sed 's/.\{2\}/&\//g')
  color06=$(printf '%s' "${base06}" | tr -d '#' | sed 's/.\{2\}/&\//g')
  color07=$(printf '%s' "${base07}" | tr -d '#' | sed 's/.\{2\}/&\//g')
  color08=$(printf '%s' "${base08}" | tr -d '#' | sed 's/.\{2\}/&\//g')
  color09=$(printf '%s' "${base09}" | tr -d '#' | sed 's/.\{2\}/&\//g')
  color0A=$(printf '%s' "${base0A}" | tr -d '#' | sed 's/.\{2\}/&\//g')
  color0B=$(printf '%s' "${base0B}" | tr -d '#' | sed 's/.\{2\}/&\//g')
  color0C=$(printf '%s' "${base0C}" | tr -d '#' | sed 's/.\{2\}/&\//g')
  color0D=$(printf '%s' "${base0D}" | tr -d '#' | sed 's/.\{2\}/&\//g')
  color0E=$(printf '%s' "${base0E}" | tr -d '#' | sed 's/.\{2\}/&\//g')
  color0F=$(printf '%s' "${base0F}" | tr -d '#' | sed 's/.\{2\}/&\//g')

  put_template 0 "${color01}" # dark grey
  put_template 1 "${color0A}" # dark red
  put_template 2 "${color0B}" # dark green
  put_template 3 "${color0C}" # dark yellow
  put_template 4 "${color0D}" # dark blue
  put_template 5 "${color0E}" # dark pink
  put_template 6 "${color0A}" # dark teal
  put_template 7 "${color04}" # light grey
  put_template 8 "${color03}" # darker grey
  put_template 9 "${color0A}" # light red
  put_template 10 "${color0B}" # light green
  put_template 11 "${color0C}" # light yellow
  put_template 12 "${color0D}" # light blue
  put_template 13 "${color0E}" # light pink
  put_template 14 "${color0A}" # light teal
  put_template 15 "${color0F}" # white

  put_template_var 10 "${color07}" # foreground
  put_template_var 11 "${color01}" # background
  put_template_custom 12 ";7" # cursor (reverse video)
}

apply_cwm() {
  printf '[%s] Applying to cwm' "$(date +'%X')"
  sed -i 's|fontname.*|fontname "'"${fontName}"':pixelsize='"${fontSize}"'"|' ~/app/cnf/cwm/cwmrc
  sed -i 's|color activeborder.*|color activeborder "'"${base0A}"'"|' ~/app/cnf/cwm/cwmrc
  sed -i 's|color inactiveborder.*|color inactiveborder "'"${base02}"'"|' ~/app/cnf/cwm/cwmrc
  sed -i 's|color font.*|color font "'"${base07}"'"|' ~/app/cnf/cwm/cwmrc
  sed -i 's|color selfont.*|color selfont "'"${base07}"'"|' ~/app/cnf/cwm/cwmrc
  sed -i 's|color menubg.*|color menubg "'"${base01}"'"|' ~/app/cnf/cwm/cwmrc
  sed -i 's|color menufg.*|color menufg "'"${base07}"'"|' ~/app/cnf/cwm/cwmrc
  printf ' ... finished!\n'
}

apply_dunst() {
  printf '[%s] Applying to dunst' "$(date +'%X')"
  sed -i "s|^font.*|font = ${fontName} ${fontSize}|" ~/app/cnf/dunst/dunstrc
  sed -i '/\[global\]/,/^$/ s/^frame_color.*/frame_color = "'"${base02}"'"/' ~/app/cnf/dunst/dunstrc
  sed -i '/\[global\]/,/^$/ s/^separator_color.*/separator_color = "'"${base02}"'"/' ~/app/cnf/dunst/dunstrc
  sed -i '/\[urgency_low\]/,/^$/ s/^background.*/background = "'"${base01}"'"/' ~/app/cnf/dunst/dunstrc
  sed -i '/\[urgency_low\]/,/^$/ s/^foreground.*/foreground = "'"${base0B}"'"/' ~/app/cnf/dunst/dunstrc
  sed -i '/\[urgency_normal\]/,/^$/ s/^background.*/background = "'"${base01}"'"/' ~/app/cnf/dunst/dunstrc
  sed -i '/\[urgency_normal\]/,/^$/ s/^foreground.*/foreground = "'"${base0A}"'"/' ~/app/cnf/dunst/dunstrc
  sed -i '/\[urgency_critical\]/,/^$/ s/^background.*/background = "'"${base01}"'"/' ~/app/cnf/dunst/dunstrc
  sed -i '/\[urgency_critical\]/,/^$/ s/^foreground.*/foreground = "'"${base09}"'"/' ~/app/cnf/dunst/dunstrc
  printf ' ... finished!\n'
}

apply_xresources() {
  printf '[%s] Applying to Xresources' "$(date +'%X')"
  sed -i 's|^#define base00.*|#define base00 '"${base00}"'|' ~/app/cnf/x/Xcolors
  sed -i 's|^#define base01.*|#define base01 '"${base01}"'|' ~/app/cnf/x/Xcolors
  sed -i 's|^#define base02.*|#define base02 '"${base02}"'|' ~/app/cnf/x/Xcolors
  sed -i 's|^#define base03.*|#define base03 '"${base03}"'|' ~/app/cnf/x/Xcolors
  sed -i 's|^#define base04.*|#define base04 '"${base04}"'|' ~/app/cnf/x/Xcolors
  sed -i 's|^#define base05.*|#define base05 '"${base05}"'|' ~/app/cnf/x/Xcolors
  sed -i 's|^#define base06.*|#define base06 '"${base06}"'|' ~/app/cnf/x/Xcolors
  sed -i 's|^#define base07.*|#define base07 '"${base07}"'|' ~/app/cnf/x/Xcolors
  sed -i 's|^#define base08.*|#define base08 '"${base08}"'|' ~/app/cnf/x/Xcolors
  sed -i 's|^#define base09.*|#define base09 '"${base09}"'|' ~/app/cnf/x/Xcolors
  sed -i 's|^#define base0A.*|#define base0A '"${base0A}"'|' ~/app/cnf/x/Xcolors
  sed -i 's|^#define base0B.*|#define base0B '"${base0B}"'|' ~/app/cnf/x/Xcolors
  sed -i 's|^#define base0C.*|#define base0C '"${base0C}"'|' ~/app/cnf/x/Xcolors
  sed -i 's|^#define base0D.*|#define base0D '"${base0D}"'|' ~/app/cnf/x/Xcolors
  sed -i 's|^#define base0E.*|#define base0E '"${base0E}"'|' ~/app/cnf/x/Xcolors
  sed -i 's|^#define base0F.*|#define base0F '"${base0F}"'|' ~/app/cnf/x/Xcolors
  # todo: apply fonts
  printf ' ... finished!\n'
}

apply_zathura() {
  printf '[%s] Applying to zathura' "$(date +'%X')"
  sed -i 's|^set font.*|set font "'"${fontName} ${fontSize}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set default-bg.*|set default-bg "'"${base01}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set default-fg.*|set default-fg "'"${base0E}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set statusbar-bg.*|set statusbar-bg "'"${base02}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set statusbar-fg.*|set statusbar-fg "'"${base04}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set inputbar-bg.*|set inputbar-bg "'"${base02}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set inputbar-fg.*|set inputbar-fg "'"${base04}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set notification-bg.*|set notification-bg "'"${base00}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set notification-fg.*|set notification-fg "'"${base07}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set notification-error-bg.*|set notification-error-bg "'"${base00}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set notification-error-fg.*|set notification-error-fg "'"${base08}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set notification-warning-bg.*|set notification-warning-bg "'"${base00}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set notification-warning-fg.*|set notification-warning-fg "'"${base09}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set highlight-color.*|set highlight-color "'"${base0A}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set highlight-active-color.*|set highlight-active-color "'"${base0C}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set completion-fg.*|set completion-fg "'"${base02}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set completion-bg.*|set completion-bg "'"${base0D}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set completion-highlight-fg.*|set completion-highlight-fg "'"${base0C}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set completion-highlight-bg.*|set completion-highlight-bg "'"${base02}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set recolor-lightcolor.*|set recolor-lightcolor "'"${base01}"'"|' ~/app/cnf/zathura/zathurarc
  sed -i 's|^set recolor-darkcolor.*|set recolor-darkcolor "'"${base0B}"'"|' ~/app/cnf/zathura/zathurarc
  printf ' ... finished!\n'
}

test "$#" -gt 0 || exit 1

case "${1}" in
  base) apply_base ${2};;
  cnf) apply_cwm; apply_dunst; apply_zathura;;
  cwm) apply_cwm;;
  dnst) apply_dunst;; 
  gtk) apply_gtk;;
  sh)
    if test -n "${2}"; then
      printf '[%s] Applying to current shell' "$(date +'%X')"
      apply_shell > "${2}"
      printf ' ... finished!'
    else
      printf '[%s] Applying to all shells' "$(date +'%X')"
      for pty in /dev/pts/[0-9]*; do
        apply_shell > "${pty}"
      done
      printf ' ... finished!\n' "$(date +'%X')"
    fi
    ;;
  xrs) apply_xresources;;
  zat) apply_zathura;;
esac
