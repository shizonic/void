#!/usr/bin/env sh
# de = dot.env

de_s() {
   env | grep -E '^[A-Z_-]*\=' | grep -v '()' | grep "^[^ ]" | sort
}

de_c() {
  tc="${d}/tty-${t}.tmp"
  de_s > "${tc}"
  join -v 2 <(cat "${td}") <(cat "${tc}") | grep -v 'PWD'
  rm "${tc}"
}

de() {
  rc="$?"
  d="${HOME}/.de"
  t=$(tty | grep -o '[0-9]*')
  td="${d}/tty-${t}.env"
  th="${d}/tty-${t}.hst"
  dd=0

  test -z "${DOTENV_INACTIVE}" || return "${rc}"

  test -e "${d}" || mkdir "${d}"
  
  if test -e "${td}" && test -e "${th}"; then
    dd=$(test "${PWD}" != "$(cat ${th})" && printf 1 || printf 0)
    if test "${dd}" -eq 1 || ! test -e "${PWD}/.env"; then
      df=$(de_c)
      #printf 'Cleaning\n'
      for f in ${df}; do
        s=$(printf '%s' "${f}" | cut -d '=' -f 1)
        o=$(grep "${s}=" "${td}" | cut -d '=' -f 2-)
        if test -z "${o}"; then
          #printf 'Unsetting: %s\n' "${s}"
          c=$(printf 'unset %s' ${s})
        else
          #printf 'Resetting: %s\n' "${s}"
          c=$(printf 'export %s="%s"' "${s}" "${o}")
        fi
        eval "${c}"
      done
      rm "${td}" "${th}"
    fi
  else
    dd=1
  fi

  if test -e "${PWD}/.env" && test "${dd}" -eq 1; then
    #printf 'Saving\n'
    de_s > "${td}"
    pwd > "${th}"
    #printf 'Injecting\n'
    . "${PWD}/.env"
  fi

  return $rc
}
