#!/bin/sh
# void-user-backup

scriptDir=$(dirname `realpath -P "$0"`)
parentDir=$(dirname "${scriptDir}")

vmb_create () {
  if ! test -d "${homeDir}/msc"; then
    printf '[%s] Preparing cache ...\n' "$(date +'%X')"
    mkdir -p "${homeDir}/msc"
  fi

  if test -f "${homeDir}/msc/lock"; then
    printf '[%s] ERROR: Cannot lock. Another backup in progress?\n' "$(date +'%X')"
    exit 1
  fi

  printf '[%s] Starting backup ...\n' "$(date +'%X')"
  dateTime="$(date +'%Y%m%d-%H%M%S')"
  printf '%s' "${dateTime}" > "${homeDir}/msc/lock"

  #printf '[%s] Compressing backup ...\n' "$(date +'%X')"
  #tar cfz "${homeDir}/msc/user-data.tar.gz" "${homeDir}/msc/"

  #if test -f "${homeDir}/msc/user-data.tar.gz"; then
  #  printf '[%s] Creating checksum ...\n' "$(date +'%X')"
  #  (cd "${homeDir}/msc" && md5sum user-data.tar.gz > "${homeDir}/msc/user-data.md5")
  #fi

  printf '[%s] Cleaning cache ...\n' "$(date +'%X')"
  find "${homeDir}/msc" -type f ! -name 'user-data.*' -delete

  printf '[%s] Creating user fs backup ...\n' "$(date +'%X')"
  borg create --exclude-from "${parentDir}/cnf/vmb.ignore" "${bakDir}::${dateTime}" "${homeDir}/usr/med"

  printf '[%s] Cleaning up ...\n' "$(date +'%X')"
  rm -r "${homeDir}/msc"
}

vmb_dryrun() {
  dateTime="$(date +'%Y%m%d-%H%M%S')"
  borg create -v --list --dry-run --exclude-from "${parentDir}/cnf/vmb.ignore" "${bakDir}::${usrName}@${dateTime}" "${homeDir}/usr/med"
}

vmb_info() {
  vmb_list

  printf '[%s] Choose target backup ...\n' "$(date +'%X')"
  read -p ': ' answ

  borg info "${bakDir}::${answ}"
}

vmb_list () {
  printf '[%s] Listing available backups ...\n' "$(date +'%X')"
  borg list "${bakDir}"
}

vmb_mount () {
  test -d "${1}" || exit 1

  vmb_list

  printf '[%s] Choose mount backup ...\n' "$(date +'%X')"
  read -p ': ' answ

  borg mount "${bakDir}::${answ}" "${1}"
}

vmb_prune () {
  printf '[%s] Pruning backups ...\n' "$(date +'%X')"
  borg prune -d 7 -w 4 -m 6 -y 10 "${bakDir}"
}

vmb_restore () {
  vmb_list

  printf '[%s] Choose restore backup ...\n' "$(date +'%X')"
  read -p ': ' answ

  borg extract "${bakDir}::${answ}"
}

test -z "${1}" && exit 1
act="${1}"; shift

mntDev=$(find /mnt/dev -maxdepth 2 -type d -name 'bak' | xargs dirname | sort | head -n 1)
if test -z "${mntDev}"; then
  2>&1 printf '[%s] No mounted device for backup found!\n' "$(date +'%X')"
  exit 1
fi

userName=$(logname)
if test "$#" -gt 0; then
  if grep -q "${1}" /etc/passwd; then
    userName="${1}"
    shift
  fi
fi
homeDir="/home/${userName}"
bakDir="${mntDev}/bak/media/${userName}"

if ! test -d "${bakDir}"; then
  printf '[%s] Backup for %s@media@%s does not exist\n' "$(date +'%X')" "${userName}" "${mntDev}"
  mkdir -p $(dirname "${bakDir}")
  borg init -e "repokey" "${bakDir}"
fi

case "${act}" in
  c) vmb_create ${@};;
  d) vmb_dryrun ${@};;
  i) vmb_info ${@};;
  l) vmb_list ${@};;
  m) vmb_mount ${@};;
  p) vmb_prune ${@};;
  r) vmb_restore ${@};;
esac
