#!/usr/bin/env sh

user=$(logname)
HOME=$(eval echo ~$user)
#exit

qem_help() {
cat <<EOL
EOL
}

qem_ins() {
  lay=$(setxkbmap -query | grep layout | awk '{print $2}' | tr -d '\n')
  ! test -f "${vmDir}/${vmName}.qcow2" && qemu-img create -f qcow2 "${vmDir}/${vmName}.qcow2" 50G
  qemu-system-x86_64 -m 2048 -k de -boot d -cdrom *.iso "${vmDir}/${vmName}.qcow2"
}

qem_run() {
  args=''
  #test $# -gt 0 && dat="${1}" || 
  dat="${vmDir}/${vmName}.qcow2"
  test -d "${vmDir}/shr" && args="${args} -net user,smb=${vmDir}/shr -net nic"
  
  if test -d "${vmDir}/drv"; then
    idx=1
    for fn in $(find "${vmDir}/drv" -type f -printf '%p\n'); do
      args="${args} -drive file=${fn},index=${idx},media=cdrom"
      idx=$((idx +1))
    done
  fi

  iphone=$(lsusb | grep 'iPhone')

  if test -n "${iphone}"; then
    ids=$(printf '%s' "${iphone}" | grep -o -E '[0-9a-z]{4}:[0-9a-z]{4}')
    vendor=$(printf '%s' "${ids}" | cut -d ':' -f 1)
    product=$(printf '%s' "${ids}" | cut -d ':' -f 2)
    printf 'iPhone detected on %s:%s!\n' "${vendor}" "${product}"
    args="${args} -usb -device nec-usb-xhci,id=xhci -device usb-ehci,id=ehci -device usb-host,vendorid=0x${vendor},productid=0x${product},bus=ehci.0,port=1"
  fi

  lay=$(setxkbmap -query | grep layout | awk '{print $2}' | tr -d '\n')
  qemu-system-x86_64 -m 2048 -k "${lay}" -smp 2 \
    -machine type=pc,accel=kvm -vga std -soundhw ac97 \
    ${@} ${args} "${dat}"
}

qem_snap() {
  snap="${vmName}-$(date +'%Y%m%d-%H%M%S').qcow2"
  printf '[%s] Backing up %s as %s...\n' "$(date +'%X')" "${vmName}" "${snap}"
  qemu-img create -f qcow2 -b "${vmDir}/${vmName}.qcow2" "${snap}"
}

test $# -eq 0 && qem_help && exit 1

if test "$(dirname ${PWD})" = "${HOME}/vrt/vms"; then
  vmName=$(basename "${PWD}")
elif test -d "${HOME}/vrt/vms/${1}"; then
  vmName="${1}"
  shift
fi
vmDir="${HOME}/vrt/vms/${vmName}"

act="${1}"; shift

case "${act}" in
  i) qem_ins ${@};;
  r) qem_run ${@};;
  s) qem_snap ${@};;
esac
