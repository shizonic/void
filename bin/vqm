#!/usr/bin/env sh

user=$(logname)
HOME=$(eval echo ~$user)
#exit

qem_help() {
cat <<EOL
EOL
}

qem_exec() {
  args=""

  test -z "${ARCH}" && export ARCH="x86_64"
  test -z "${ISO}" && export ISO=$(find ${vmDir}/*.iso | head -n 1)
  test -z "${DAT}" && export DAT=$(find ${vmDir}/*.qcow2 | head -n 1)
  test -z "${MEM}" && export MEM="2048"
  test -z "${LAY}" && export LAY=$(setxkbmap -query | grep layout | awk '{print $2}' | tr -d '\n')
  test -z "${CPU}" && export CPU=$(echo "$(grep -c ^processor /proc/cpuinfo) / 2" | bc)
  test -z "${MACH}" && export MACH="type=pc,accel=kvm"
  test -z "${VGA}" && export VGA="std" 
  test -z "${SND}" && export SND="ac97" 

  cmd="qemu-system-${ARCH}"

  test -n "${ISO}" && args="${args} -cdrom ${ISO}"
  test -n "${LAY}" && args="${args} -k ${LAY}"
  test -n "${MEM}" && args="${args} -m ${MEM}"
  test -n "${BOOT}" && args="${args} -boot ${BOOT}"
  test -n "${CPU}" && args="${args} -smp ${CPU}"
  test -n "${MACH}" && args="${args} -machine ${MACH}"
  test -n "${VGA}" && args="${args} -vga ${VGA}"
  test -n "${SND}" && args="${args} -soundhw ${SND}"

  printf 'Running "%s %s %s"\n' "${cmd}" "${args}" "${DAT}"
  ${cmd} ${args} ${DAT}
}

qem_ins() {
  #lay=$(setxkbmap -query | grep layout | awk '{print $2}' | tr -d '\n')
  ! test -f "${vmDir}/${vmName}.qcow2" && qemu-img create -f qcow2 "${vmDir}/${vmName}.qcow2" 50G
  qem_exec ${@}
  #qemu-system-x86_64 -m 2048 -k "${lay}" -boot d -cdrom *.iso "${vmDir}/${vmName}.qcow2"
}

qem_run() {
  args=''
  #test $# -gt 0 && dat="${1}" || 
  dat="${vmDir}/${vmName}.qcow2"
  test -d "${vmDir}/shr" && args="${args} -net user,smb=${vmDir}/shr -net nic"
  
  if test -d "${vmDir}/drv"; then
    idx=1
    for fn in $(find "${vmDir}/drv" -type f -printf '%p\n'); do
      args="${args} -drive file=${fn},index=${idx},media=cdrom"
      idx=$((idx +1))
    done
  fi

  iphone=$(lsusb | grep 'iPhone')

  if test -n "${iphone}"; then
    ids=$(printf '%s' "${iphone}" | grep -o -E '[0-9a-z]{4}:[0-9a-z]{4}')
    vendor=$(printf '%s' "${ids}" | cut -d ':' -f 1)
    product=$(printf '%s' "${ids}" | cut -d ':' -f 2)
    printf 'iPhone detected on %s:%s!\n' "${vendor}" "${product}"
    args="${args} -usb -device nec-usb-xhci,id=xhci -device usb-ehci,id=ehci -device usb-host,vendorid=0x${vendor},productid=0x${product},bus=ehci.0,port=1"
  fi

  lay=$(setxkbmap -query | grep layout | awk '{print $2}' | tr -d '\n')
  qemu-system-x86_64 -m 2048 -k "${lay}" -smp 2 \
    -machine type=pc,accel=kvm -vga std -soundhw ac97 \
    ${@} ${args} "${dat}"
}

qem_snap() {
  snap="${vmName}-$(date +'%Y%m%d-%H%M%S').qcow2"
  printf '[%s] Backing up %s as %s...\n' "$(date +'%X')" "${vmName}" "${snap}"
  qemu-img create -f qcow2 -b "${vmDir}/${vmName}.qcow2" "${snap}"
}

test $# -eq 0 && qem_help && exit 1

if test "$(dirname ${PWD})" = "${HOME}/vrt/vms"; then
  vmName=$(basename "${PWD}")
elif test -d "${HOME}/vrt/vms/${1}"; then
  vmName="${1}"
  shift
fi
vmDir="${HOME}/vrt/vms/${vmName}"

act="${1}"; shift

case "${act}" in
  e) qem_exec ${@};;
  i) qem_ins ${@};;
  r) qem_run ${@};;
  s) qem_snap ${@};;
esac
