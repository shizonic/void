#!/usr/bin/env sh

tmpConf='/tmp/ffserver.conf'
tmpLog='/tmp/ffserver.log'

fps=5
display=':0.0'
prot='http'
addr='localhost'
port='8090'
feed='0.ffm'
format='flv'
stream="0.${format}"
area=$(xrandr | grep primary | grep -o -E '[0-9]{1,}x[0-9]{1,}')
tmpFeed="/tmp/ffserver-${feed}"

if test "${1}" = 'server'; then
  #ip=$(curl -s "https://api.ipify.org")
  ip=$(ip route get 1 | awk '{print $7;exit}')
  cat > "${tmpConf}" << EOL
HTTPPort ${port}
HTTPBindAddress ${addr}
MaxHTTPConnections 64
MaxClients 28
MaxBandwidth 10000
CustomLog ${tmpLog}

<Feed ${feed}>
  File ${tmpFeed}
  FileMaxSize 200K

  # ACL allow ${ip}
  # ACL allow localhost
</Feed>

<Stream ${stream}>
  # The feed to encode data from
  Feed ${feed}

  # Video encoding options
  Format flv
  VideoCodec libx264
  VideoFrameRate ${fps}
  VideoSize ${area}
  VideoBitRate 512
  AVOptionVideo tune zerolatency
  AVOptionVideo flags +global_header

  # Audio encoding options
  AudioCodec aac
  AVOptionAudio flags +global_header
</Stream>
EOL
  trap "rm -f ${tmpConf} ${tmpLog}" EXIT INT TERM
  ffserver -f "${tmpConf}"
elif test "${1}" = 'feed'; then
  trap "rm -f ${tmpFeed}" EXIT INT TERM
  ffmpeg -f x11grab -r ${fps} -s ${area} -thread_queue_size 1024 -i ${display} \
    -f alsa -ac 1 -thread_queue_size 1024 -i default \
    -af 'highpass=f=200, lowpass=f=2000' -fflags nobuffer \
    "${prot}://${addr}:${port}/${feed}"
elif test "${1}" = 'watch'; then
  mpv "${prot}://${addr}:${port}/0.${format}"
fi
